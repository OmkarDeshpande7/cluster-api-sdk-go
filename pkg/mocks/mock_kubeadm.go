// Code generated by MockGen. DO NOT EDIT.
// Source: ../../bootstrap/kubeadm/kubeadm.go
//
// Generated by this command:
//
//	mockgen -package mocks -destination=./mock_kubeadm.go -source=../../bootstrap/kubeadm/kubeadm.go -build_flags=-mod=mod
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	bootstrap "github.com/platform9/cluster-api-sdk-go/bootstrap"
	gomock "go.uber.org/mock/gomock"
)

// MockKubeadmProvider is a mock of KubeadmProvider interface.
type MockKubeadmProvider struct {
	ctrl     *gomock.Controller
	recorder *MockKubeadmProviderMockRecorder
}

// MockKubeadmProviderMockRecorder is the mock recorder for MockKubeadmProvider.
type MockKubeadmProviderMockRecorder struct {
	mock *MockKubeadmProvider
}

// NewMockKubeadmProvider creates a new mock instance.
func NewMockKubeadmProvider(ctrl *gomock.Controller) *MockKubeadmProvider {
	mock := &MockKubeadmProvider{ctrl: ctrl}
	mock.recorder = &MockKubeadmProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKubeadmProvider) EXPECT() *MockKubeadmProviderMockRecorder {
	return m.recorder
}

// CreateBootstrapConfigTemplate mocks base method.
func (m *MockKubeadmProvider) CreateBootstrapConfigTemplate(ctx context.Context, input bootstrap.CreateBootstrapConfigTemplateInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBootstrapConfigTemplate", ctx, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateBootstrapConfigTemplate indicates an expected call of CreateBootstrapConfigTemplate.
func (mr *MockKubeadmProviderMockRecorder) CreateBootstrapConfigTemplate(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBootstrapConfigTemplate", reflect.TypeOf((*MockKubeadmProvider)(nil).CreateBootstrapConfigTemplate), ctx, input)
}

// DeleteBootstrapConfigTemplate mocks base method.
func (m *MockKubeadmProvider) DeleteBootstrapConfigTemplate(ctx context.Context, input bootstrap.DeleteBootstrapConfigTemplateInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteBootstrapConfigTemplate", ctx, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteBootstrapConfigTemplate indicates an expected call of DeleteBootstrapConfigTemplate.
func (mr *MockKubeadmProviderMockRecorder) DeleteBootstrapConfigTemplate(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBootstrapConfigTemplate", reflect.TypeOf((*MockKubeadmProvider)(nil).DeleteBootstrapConfigTemplate), ctx, input)
}

// GetBootstrapConfigTemplate mocks base method.
func (m *MockKubeadmProvider) GetBootstrapConfigTemplate(ctx context.Context, input bootstrap.GetBootstrapConfigTemplateInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBootstrapConfigTemplate", ctx, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetBootstrapConfigTemplate indicates an expected call of GetBootstrapConfigTemplate.
func (mr *MockKubeadmProviderMockRecorder) GetBootstrapConfigTemplate(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBootstrapConfigTemplate", reflect.TypeOf((*MockKubeadmProvider)(nil).GetBootstrapConfigTemplate), ctx, input)
}

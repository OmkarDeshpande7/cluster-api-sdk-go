// Code generated by MockGen. DO NOT EDIT.
// Source: ../../infrastructure/infrastructure.go
//
// Generated by this command:
//
//	mockgen -package mocks -destination=./mock_infrastructure.go -source=../../infrastructure/infrastructure.go -build_flags=-mod=mod
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	infrastructure "github.com/platform9/cluster-api-sdk-go/infrastructure"
	gomock "go.uber.org/mock/gomock"
	v1beta2 "sigs.k8s.io/cluster-api-provider-aws/v2/api/v1beta2"
)

// MockInfraProvider is a mock of InfraProvider interface.
type MockInfraProvider struct {
	ctrl     *gomock.Controller
	recorder *MockInfraProviderMockRecorder
}

// MockInfraProviderMockRecorder is the mock recorder for MockInfraProvider.
type MockInfraProviderMockRecorder struct {
	mock *MockInfraProvider
}

// NewMockInfraProvider creates a new mock instance.
func NewMockInfraProvider(ctrl *gomock.Controller) *MockInfraProvider {
	mock := &MockInfraProvider{ctrl: ctrl}
	mock.recorder = &MockInfraProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInfraProvider) EXPECT() *MockInfraProviderMockRecorder {
	return m.recorder
}

// CreateClusterRoleIdentity mocks base method.
func (m *MockInfraProvider) CreateClusterRoleIdentity(ctx context.Context, input infrastructure.CreateInfraClusterIdentityInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateClusterRoleIdentity", ctx, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateClusterRoleIdentity indicates an expected call of CreateClusterRoleIdentity.
func (mr *MockInfraProviderMockRecorder) CreateClusterRoleIdentity(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateClusterRoleIdentity", reflect.TypeOf((*MockInfraProvider)(nil).CreateClusterRoleIdentity), ctx, input)
}

// CreateInfraCluster mocks base method.
func (m *MockInfraProvider) CreateInfraCluster(ctx context.Context, input infrastructure.CreateInfraClusterInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInfraCluster", ctx, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateInfraCluster indicates an expected call of CreateInfraCluster.
func (mr *MockInfraProviderMockRecorder) CreateInfraCluster(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInfraCluster", reflect.TypeOf((*MockInfraProvider)(nil).CreateInfraCluster), ctx, input)
}

// CreateInfraMachine mocks base method.
func (m *MockInfraProvider) CreateInfraMachine(ctx context.Context, input infrastructure.CreateInfraMachineInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInfraMachine", ctx, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateInfraMachine indicates an expected call of CreateInfraMachine.
func (mr *MockInfraProviderMockRecorder) CreateInfraMachine(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInfraMachine", reflect.TypeOf((*MockInfraProvider)(nil).CreateInfraMachine), ctx, input)
}

// CreateInfraMachineTemplate mocks base method.
func (m *MockInfraProvider) CreateInfraMachineTemplate(ctx context.Context, input infrastructure.CreateInfraMachineTemplateInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInfraMachineTemplate", ctx, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateInfraMachineTemplate indicates an expected call of CreateInfraMachineTemplate.
func (mr *MockInfraProviderMockRecorder) CreateInfraMachineTemplate(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInfraMachineTemplate", reflect.TypeOf((*MockInfraProvider)(nil).CreateInfraMachineTemplate), ctx, input)
}

// CreateInfraStaticIdentity mocks base method.
func (m *MockInfraProvider) CreateInfraStaticIdentity(ctx context.Context, input infrastructure.CreateInfraClusterIdentityInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInfraStaticIdentity", ctx, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateInfraStaticIdentity indicates an expected call of CreateInfraStaticIdentity.
func (mr *MockInfraProviderMockRecorder) CreateInfraStaticIdentity(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInfraStaticIdentity", reflect.TypeOf((*MockInfraProvider)(nil).CreateInfraStaticIdentity), ctx, input)
}

// DeleteClusterRoleIdentity mocks base method.
func (m *MockInfraProvider) DeleteClusterRoleIdentity(ctx context.Context, input infrastructure.DeleteInfraClusterIdentityInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteClusterRoleIdentity", ctx, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteClusterRoleIdentity indicates an expected call of DeleteClusterRoleIdentity.
func (mr *MockInfraProviderMockRecorder) DeleteClusterRoleIdentity(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteClusterRoleIdentity", reflect.TypeOf((*MockInfraProvider)(nil).DeleteClusterRoleIdentity), ctx, input)
}

// DeleteInfraCluster mocks base method.
func (m *MockInfraProvider) DeleteInfraCluster(ctx context.Context, input infrastructure.DeleteInfraClusterInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteInfraCluster", ctx, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteInfraCluster indicates an expected call of DeleteInfraCluster.
func (mr *MockInfraProviderMockRecorder) DeleteInfraCluster(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteInfraCluster", reflect.TypeOf((*MockInfraProvider)(nil).DeleteInfraCluster), ctx, input)
}

// DeleteInfraMachine mocks base method.
func (m *MockInfraProvider) DeleteInfraMachine(ctx context.Context, input infrastructure.DeleteInfraMachineInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteInfraMachine", ctx, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteInfraMachine indicates an expected call of DeleteInfraMachine.
func (mr *MockInfraProviderMockRecorder) DeleteInfraMachine(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteInfraMachine", reflect.TypeOf((*MockInfraProvider)(nil).DeleteInfraMachine), ctx, input)
}

// DeleteInfraMachineTemplate mocks base method.
func (m *MockInfraProvider) DeleteInfraMachineTemplate(ctx context.Context, input infrastructure.DeleteInfraMachineTemplateInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteInfraMachineTemplate", ctx, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteInfraMachineTemplate indicates an expected call of DeleteInfraMachineTemplate.
func (mr *MockInfraProviderMockRecorder) DeleteInfraMachineTemplate(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteInfraMachineTemplate", reflect.TypeOf((*MockInfraProvider)(nil).DeleteInfraMachineTemplate), ctx, input)
}

// DeleteInfraStaticIdentity mocks base method.
func (m *MockInfraProvider) DeleteInfraStaticIdentity(ctx context.Context, input infrastructure.DeleteInfraClusterIdentityInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteInfraStaticIdentity", ctx, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteInfraStaticIdentity indicates an expected call of DeleteInfraStaticIdentity.
func (mr *MockInfraProviderMockRecorder) DeleteInfraStaticIdentity(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteInfraStaticIdentity", reflect.TypeOf((*MockInfraProvider)(nil).DeleteInfraStaticIdentity), ctx, input)
}

// GetClusterRoleIdentity mocks base method.
func (m *MockInfraProvider) GetClusterRoleIdentity(ctx context.Context, input infrastructure.GetInfraClusterIdentityInput) (*v1beta2.AWSClusterRoleIdentity, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterRoleIdentity", ctx, input)
	ret0, _ := ret[0].(*v1beta2.AWSClusterRoleIdentity)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusterRoleIdentity indicates an expected call of GetClusterRoleIdentity.
func (mr *MockInfraProviderMockRecorder) GetClusterRoleIdentity(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterRoleIdentity", reflect.TypeOf((*MockInfraProvider)(nil).GetClusterRoleIdentity), ctx, input)
}

// GetInfraCluster mocks base method.
func (m *MockInfraProvider) GetInfraCluster(ctx context.Context, input infrastructure.GetInfraClusterInput) (any, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInfraCluster", ctx, input)
	ret0, _ := ret[0].(any)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInfraCluster indicates an expected call of GetInfraCluster.
func (mr *MockInfraProviderMockRecorder) GetInfraCluster(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInfraCluster", reflect.TypeOf((*MockInfraProvider)(nil).GetInfraCluster), ctx, input)
}

// GetInfraMachine mocks base method.
func (m *MockInfraProvider) GetInfraMachine(ctx context.Context, input infrastructure.GetInfraMachineInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInfraMachine", ctx, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetInfraMachine indicates an expected call of GetInfraMachine.
func (mr *MockInfraProviderMockRecorder) GetInfraMachine(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInfraMachine", reflect.TypeOf((*MockInfraProvider)(nil).GetInfraMachine), ctx, input)
}

// GetInfraMachineTemplate mocks base method.
func (m *MockInfraProvider) GetInfraMachineTemplate(ctx context.Context, input infrastructure.GetInfraMachineTemplateInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInfraMachineTemplate", ctx, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetInfraMachineTemplate indicates an expected call of GetInfraMachineTemplate.
func (mr *MockInfraProviderMockRecorder) GetInfraMachineTemplate(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInfraMachineTemplate", reflect.TypeOf((*MockInfraProvider)(nil).GetInfraMachineTemplate), ctx, input)
}

// MockGetInfraClusterInput is a mock of GetInfraClusterInput interface.
type MockGetInfraClusterInput struct {
	ctrl     *gomock.Controller
	recorder *MockGetInfraClusterInputMockRecorder
}

// MockGetInfraClusterInputMockRecorder is the mock recorder for MockGetInfraClusterInput.
type MockGetInfraClusterInputMockRecorder struct {
	mock *MockGetInfraClusterInput
}

// NewMockGetInfraClusterInput creates a new mock instance.
func NewMockGetInfraClusterInput(ctrl *gomock.Controller) *MockGetInfraClusterInput {
	mock := &MockGetInfraClusterInput{ctrl: ctrl}
	mock.recorder = &MockGetInfraClusterInputMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGetInfraClusterInput) EXPECT() *MockGetInfraClusterInputMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockGetInfraClusterInput) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockGetInfraClusterInputMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockGetInfraClusterInput)(nil).GetName))
}

// MockGetInfraClusterStaticIdentityInput is a mock of GetInfraClusterStaticIdentityInput interface.
type MockGetInfraClusterStaticIdentityInput struct {
	ctrl     *gomock.Controller
	recorder *MockGetInfraClusterStaticIdentityInputMockRecorder
}

// MockGetInfraClusterStaticIdentityInputMockRecorder is the mock recorder for MockGetInfraClusterStaticIdentityInput.
type MockGetInfraClusterStaticIdentityInputMockRecorder struct {
	mock *MockGetInfraClusterStaticIdentityInput
}

// NewMockGetInfraClusterStaticIdentityInput creates a new mock instance.
func NewMockGetInfraClusterStaticIdentityInput(ctrl *gomock.Controller) *MockGetInfraClusterStaticIdentityInput {
	mock := &MockGetInfraClusterStaticIdentityInput{ctrl: ctrl}
	mock.recorder = &MockGetInfraClusterStaticIdentityInputMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGetInfraClusterStaticIdentityInput) EXPECT() *MockGetInfraClusterStaticIdentityInputMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockGetInfraClusterStaticIdentityInput) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockGetInfraClusterStaticIdentityInputMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockGetInfraClusterStaticIdentityInput)(nil).GetName))
}

// MockGetInfraMachineInput is a mock of GetInfraMachineInput interface.
type MockGetInfraMachineInput struct {
	ctrl     *gomock.Controller
	recorder *MockGetInfraMachineInputMockRecorder
}

// MockGetInfraMachineInputMockRecorder is the mock recorder for MockGetInfraMachineInput.
type MockGetInfraMachineInputMockRecorder struct {
	mock *MockGetInfraMachineInput
}

// NewMockGetInfraMachineInput creates a new mock instance.
func NewMockGetInfraMachineInput(ctrl *gomock.Controller) *MockGetInfraMachineInput {
	mock := &MockGetInfraMachineInput{ctrl: ctrl}
	mock.recorder = &MockGetInfraMachineInputMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGetInfraMachineInput) EXPECT() *MockGetInfraMachineInputMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockGetInfraMachineInput) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockGetInfraMachineInputMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockGetInfraMachineInput)(nil).GetName))
}

// MockGetInfraMachineTemplateInput is a mock of GetInfraMachineTemplateInput interface.
type MockGetInfraMachineTemplateInput struct {
	ctrl     *gomock.Controller
	recorder *MockGetInfraMachineTemplateInputMockRecorder
}

// MockGetInfraMachineTemplateInputMockRecorder is the mock recorder for MockGetInfraMachineTemplateInput.
type MockGetInfraMachineTemplateInputMockRecorder struct {
	mock *MockGetInfraMachineTemplateInput
}

// NewMockGetInfraMachineTemplateInput creates a new mock instance.
func NewMockGetInfraMachineTemplateInput(ctrl *gomock.Controller) *MockGetInfraMachineTemplateInput {
	mock := &MockGetInfraMachineTemplateInput{ctrl: ctrl}
	mock.recorder = &MockGetInfraMachineTemplateInputMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGetInfraMachineTemplateInput) EXPECT() *MockGetInfraMachineTemplateInputMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockGetInfraMachineTemplateInput) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockGetInfraMachineTemplateInputMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockGetInfraMachineTemplateInput)(nil).GetName))
}

// MockCreateInfraClusterInput is a mock of CreateInfraClusterInput interface.
type MockCreateInfraClusterInput struct {
	ctrl     *gomock.Controller
	recorder *MockCreateInfraClusterInputMockRecorder
}

// MockCreateInfraClusterInputMockRecorder is the mock recorder for MockCreateInfraClusterInput.
type MockCreateInfraClusterInputMockRecorder struct {
	mock *MockCreateInfraClusterInput
}

// NewMockCreateInfraClusterInput creates a new mock instance.
func NewMockCreateInfraClusterInput(ctrl *gomock.Controller) *MockCreateInfraClusterInput {
	mock := &MockCreateInfraClusterInput{ctrl: ctrl}
	mock.recorder = &MockCreateInfraClusterInputMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateInfraClusterInput) EXPECT() *MockCreateInfraClusterInputMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockCreateInfraClusterInput) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockCreateInfraClusterInputMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockCreateInfraClusterInput)(nil).GetName))
}

// MockCreateInfraClusterIdentityInput is a mock of CreateInfraClusterIdentityInput interface.
type MockCreateInfraClusterIdentityInput struct {
	ctrl     *gomock.Controller
	recorder *MockCreateInfraClusterIdentityInputMockRecorder
}

// MockCreateInfraClusterIdentityInputMockRecorder is the mock recorder for MockCreateInfraClusterIdentityInput.
type MockCreateInfraClusterIdentityInputMockRecorder struct {
	mock *MockCreateInfraClusterIdentityInput
}

// NewMockCreateInfraClusterIdentityInput creates a new mock instance.
func NewMockCreateInfraClusterIdentityInput(ctrl *gomock.Controller) *MockCreateInfraClusterIdentityInput {
	mock := &MockCreateInfraClusterIdentityInput{ctrl: ctrl}
	mock.recorder = &MockCreateInfraClusterIdentityInputMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateInfraClusterIdentityInput) EXPECT() *MockCreateInfraClusterIdentityInputMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockCreateInfraClusterIdentityInput) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockCreateInfraClusterIdentityInputMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockCreateInfraClusterIdentityInput)(nil).GetName))
}

// MockCreateInfraMachineInput is a mock of CreateInfraMachineInput interface.
type MockCreateInfraMachineInput struct {
	ctrl     *gomock.Controller
	recorder *MockCreateInfraMachineInputMockRecorder
}

// MockCreateInfraMachineInputMockRecorder is the mock recorder for MockCreateInfraMachineInput.
type MockCreateInfraMachineInputMockRecorder struct {
	mock *MockCreateInfraMachineInput
}

// NewMockCreateInfraMachineInput creates a new mock instance.
func NewMockCreateInfraMachineInput(ctrl *gomock.Controller) *MockCreateInfraMachineInput {
	mock := &MockCreateInfraMachineInput{ctrl: ctrl}
	mock.recorder = &MockCreateInfraMachineInputMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateInfraMachineInput) EXPECT() *MockCreateInfraMachineInputMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockCreateInfraMachineInput) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockCreateInfraMachineInputMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockCreateInfraMachineInput)(nil).GetName))
}

// MockCreateInfraMachineTemplateInput is a mock of CreateInfraMachineTemplateInput interface.
type MockCreateInfraMachineTemplateInput struct {
	ctrl     *gomock.Controller
	recorder *MockCreateInfraMachineTemplateInputMockRecorder
}

// MockCreateInfraMachineTemplateInputMockRecorder is the mock recorder for MockCreateInfraMachineTemplateInput.
type MockCreateInfraMachineTemplateInputMockRecorder struct {
	mock *MockCreateInfraMachineTemplateInput
}

// NewMockCreateInfraMachineTemplateInput creates a new mock instance.
func NewMockCreateInfraMachineTemplateInput(ctrl *gomock.Controller) *MockCreateInfraMachineTemplateInput {
	mock := &MockCreateInfraMachineTemplateInput{ctrl: ctrl}
	mock.recorder = &MockCreateInfraMachineTemplateInputMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateInfraMachineTemplateInput) EXPECT() *MockCreateInfraMachineTemplateInputMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockCreateInfraMachineTemplateInput) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockCreateInfraMachineTemplateInputMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockCreateInfraMachineTemplateInput)(nil).GetName))
}

// MockDeleteInfraClusterInput is a mock of DeleteInfraClusterInput interface.
type MockDeleteInfraClusterInput struct {
	ctrl     *gomock.Controller
	recorder *MockDeleteInfraClusterInputMockRecorder
}

// MockDeleteInfraClusterInputMockRecorder is the mock recorder for MockDeleteInfraClusterInput.
type MockDeleteInfraClusterInputMockRecorder struct {
	mock *MockDeleteInfraClusterInput
}

// NewMockDeleteInfraClusterInput creates a new mock instance.
func NewMockDeleteInfraClusterInput(ctrl *gomock.Controller) *MockDeleteInfraClusterInput {
	mock := &MockDeleteInfraClusterInput{ctrl: ctrl}
	mock.recorder = &MockDeleteInfraClusterInputMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeleteInfraClusterInput) EXPECT() *MockDeleteInfraClusterInputMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockDeleteInfraClusterInput) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockDeleteInfraClusterInputMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockDeleteInfraClusterInput)(nil).GetName))
}

// MockDeleteInfraMachineInput is a mock of DeleteInfraMachineInput interface.
type MockDeleteInfraMachineInput struct {
	ctrl     *gomock.Controller
	recorder *MockDeleteInfraMachineInputMockRecorder
}

// MockDeleteInfraMachineInputMockRecorder is the mock recorder for MockDeleteInfraMachineInput.
type MockDeleteInfraMachineInputMockRecorder struct {
	mock *MockDeleteInfraMachineInput
}

// NewMockDeleteInfraMachineInput creates a new mock instance.
func NewMockDeleteInfraMachineInput(ctrl *gomock.Controller) *MockDeleteInfraMachineInput {
	mock := &MockDeleteInfraMachineInput{ctrl: ctrl}
	mock.recorder = &MockDeleteInfraMachineInputMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeleteInfraMachineInput) EXPECT() *MockDeleteInfraMachineInputMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockDeleteInfraMachineInput) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockDeleteInfraMachineInputMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockDeleteInfraMachineInput)(nil).GetName))
}

// MockDeleteInfraMachineTemplateInput is a mock of DeleteInfraMachineTemplateInput interface.
type MockDeleteInfraMachineTemplateInput struct {
	ctrl     *gomock.Controller
	recorder *MockDeleteInfraMachineTemplateInputMockRecorder
}

// MockDeleteInfraMachineTemplateInputMockRecorder is the mock recorder for MockDeleteInfraMachineTemplateInput.
type MockDeleteInfraMachineTemplateInputMockRecorder struct {
	mock *MockDeleteInfraMachineTemplateInput
}

// NewMockDeleteInfraMachineTemplateInput creates a new mock instance.
func NewMockDeleteInfraMachineTemplateInput(ctrl *gomock.Controller) *MockDeleteInfraMachineTemplateInput {
	mock := &MockDeleteInfraMachineTemplateInput{ctrl: ctrl}
	mock.recorder = &MockDeleteInfraMachineTemplateInputMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeleteInfraMachineTemplateInput) EXPECT() *MockDeleteInfraMachineTemplateInputMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockDeleteInfraMachineTemplateInput) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockDeleteInfraMachineTemplateInputMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockDeleteInfraMachineTemplateInput)(nil).GetName))
}

// MockDeleteInfraClusterIdentityInput is a mock of DeleteInfraClusterIdentityInput interface.
type MockDeleteInfraClusterIdentityInput struct {
	ctrl     *gomock.Controller
	recorder *MockDeleteInfraClusterIdentityInputMockRecorder
}

// MockDeleteInfraClusterIdentityInputMockRecorder is the mock recorder for MockDeleteInfraClusterIdentityInput.
type MockDeleteInfraClusterIdentityInputMockRecorder struct {
	mock *MockDeleteInfraClusterIdentityInput
}

// NewMockDeleteInfraClusterIdentityInput creates a new mock instance.
func NewMockDeleteInfraClusterIdentityInput(ctrl *gomock.Controller) *MockDeleteInfraClusterIdentityInput {
	mock := &MockDeleteInfraClusterIdentityInput{ctrl: ctrl}
	mock.recorder = &MockDeleteInfraClusterIdentityInputMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeleteInfraClusterIdentityInput) EXPECT() *MockDeleteInfraClusterIdentityInputMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockDeleteInfraClusterIdentityInput) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockDeleteInfraClusterIdentityInputMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockDeleteInfraClusterIdentityInput)(nil).GetName))
}

// MockGetInfraClusterIdentityInput is a mock of GetInfraClusterIdentityInput interface.
type MockGetInfraClusterIdentityInput struct {
	ctrl     *gomock.Controller
	recorder *MockGetInfraClusterIdentityInputMockRecorder
}

// MockGetInfraClusterIdentityInputMockRecorder is the mock recorder for MockGetInfraClusterIdentityInput.
type MockGetInfraClusterIdentityInputMockRecorder struct {
	mock *MockGetInfraClusterIdentityInput
}

// NewMockGetInfraClusterIdentityInput creates a new mock instance.
func NewMockGetInfraClusterIdentityInput(ctrl *gomock.Controller) *MockGetInfraClusterIdentityInput {
	mock := &MockGetInfraClusterIdentityInput{ctrl: ctrl}
	mock.recorder = &MockGetInfraClusterIdentityInputMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGetInfraClusterIdentityInput) EXPECT() *MockGetInfraClusterIdentityInputMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockGetInfraClusterIdentityInput) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockGetInfraClusterIdentityInputMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockGetInfraClusterIdentityInput)(nil).GetName))
}

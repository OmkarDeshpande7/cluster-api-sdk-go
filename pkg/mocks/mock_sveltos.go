// Code generated by MockGen. DO NOT EDIT.
// Source: ../../addon/sveltos/sveltos.go
//
// Generated by this command:
//
//	mockgen -package mocks -destination=./mock_sveltos.go -source=../../addon/sveltos/sveltos.go -build_flags=-mod=mod
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	addon "github.com/platform9/cluster-api-sdk-go/addon"
	gomock "go.uber.org/mock/gomock"
)

// MockSveltosProvider is a mock of SveltosProvider interface.
type MockSveltosProvider struct {
	ctrl     *gomock.Controller
	recorder *MockSveltosProviderMockRecorder
}

// MockSveltosProviderMockRecorder is the mock recorder for MockSveltosProvider.
type MockSveltosProviderMockRecorder struct {
	mock *MockSveltosProvider
}

// NewMockSveltosProvider creates a new mock instance.
func NewMockSveltosProvider(ctrl *gomock.Controller) *MockSveltosProvider {
	mock := &MockSveltosProvider{ctrl: ctrl}
	mock.recorder = &MockSveltosProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSveltosProvider) EXPECT() *MockSveltosProviderMockRecorder {
	return m.recorder
}

// GetAddonClusterSummary mocks base method.
func (m *MockSveltosProvider) GetAddonClusterSummary(ctx context.Context, input addon.GetAddonClusterSummaryInput) (any, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAddonClusterSummary", ctx, input)
	ret0, _ := ret[0].(any)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAddonClusterSummary indicates an expected call of GetAddonClusterSummary.
func (mr *MockSveltosProviderMockRecorder) GetAddonClusterSummary(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAddonClusterSummary", reflect.TypeOf((*MockSveltosProvider)(nil).GetAddonClusterSummary), ctx, input)
}
